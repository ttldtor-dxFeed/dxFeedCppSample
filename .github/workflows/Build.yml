name: Build & Run

on:
  push:
    branches: [ default ]
  pull_request:
    branches: [ default ]
  workflow_dispatch:

jobs:
  build-ubuntu-mac:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        buildType: [ Release, Debug ]
        dxFeedCAPIVersion: [ "8.6.3" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Prepare dependencies [Linux]
        if: runner.os == 'Linux'
        shell: pwsh
        run: |
          ./scripts/prepare.ps1 -d linux -v ${{matrix.dxFeedCAPIVersion}}

      - name: Prepare dependencies [macOS]
        if: runner.os == 'macOS'
        shell: pwsh
        run: |
          ./scripts/prepare.ps1 -d macos -v ${{matrix.dxFeedCAPIVersion}}        

      - name: Prepare
        run: |
          ls
          mkdir ${{github.workspace}}/build && cd ${{github.workspace}}/build

      - name: Configure CMake
        run: cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.buildType}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.buildType}}

      - name: Run
        run: |
          cd ${{github.workspace}}/build
          chmod +x ./dxFeedCppSample
          ./dxFeedCppSample

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.os}}-${{matrix.buildType}}-capi-${{matrix.dxFeedCAPIVersion}}
          path: |
            ${{github.workspace}}/build/dxFeedCppSample
            ${{github.workspace}}/build/*.so
            ${{github.workspace}}/build/*.dylib

  build-win:
    strategy:
      matrix:
        os: [ windows-latest ]
        buildType: [ Release, Debug ]
        dxFeedCAPIVersion: [ "8.6.3" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Prepare dependencies [Win]
        shell: pwsh
        run: |
          ./scripts/prepare.ps1 -v ${{matrix.dxFeedCAPIVersion}}      

      - name: Prepare
        run: |
          ls
          mkdir ${{github.workspace}}/build && cd ${{github.workspace}}/build

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Configure CMake
        run: cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.buildType}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.buildType}}

      - name: Run
        run: |
          cd ${{github.workspace}}/build
          dir
          ./dxFeedCppSample.exe

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.os}}-${{matrix.buildType}}-capi-${{matrix.dxFeedCAPIVersion}}
          path: |
            ${{github.workspace}}/build/dxFeedCppSample.exe
            ${{github.workspace}}/build/*.dll